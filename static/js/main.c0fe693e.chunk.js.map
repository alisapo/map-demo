{"version":3,"sources":["components/PopupStyles.js","components/MapComponent.js","App.js","index.js"],"names":["popupContent","backgroundColor","borderRadius","padding","popupHead","fontWeight","fontSize","popupText","MapComponent","handleMarker","incidentId","incident","props","incidents","find","item","id","setState","currentIncident","disabled","handleSlider","buttonId","currentIndex","indexOf","state","newIndex","length","eval","markerRefs","openPopup","lat","lng","zoom","marker","leafletElement","this","center","style","width","height","attribution","url","map","point","coordinates","eventHandlers","click","position","ref","className","address","city","incident_number","onClick","e","target","Component","App","useState","setIncidents","useEffect","axios","get","params","then","res","data","catch","err","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0fe693e.chunk.js","sourcesContent":["const popupContent = {\r\n  backgroundColor: \"#b1cbec\",\r\n  borderRadius: \"3px\",\r\n  padding: \"3px\",\r\n};\r\n\r\nconst popupHead = {\r\n  fontWeight: \"bold\",\r\n  fontSize: \"17px\",\r\n};\r\n\r\nconst popupText = {\r\n  fontSize: \"15px\",\r\n};\r\n\r\nexport { popupContent, popupText, popupHead };\r\n","import React, { Component } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { popupContent, popupHead, popupText } from './PopupStyles';\r\n\r\nexport default class MapComponent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lat: 37.7749,\r\n      lng: -122.4194,\r\n      zoom: 13,\r\n      disabled: true,\r\n      currentIncident: null,\r\n    };\r\n\r\n    this.markerRefs = []\r\n  }\r\n\r\n  handleMarker = incidentId => {\r\n    let incident = this.props.incidents.find(item => item.id === incidentId);\r\n    this.setState({\r\n      currentIncident: incident,\r\n      disabled: false,\r\n    });\r\n  }\r\n\r\n  openPopup(marker, id) {\r\n    if (marker && marker.leafletElement) {\r\n      marker.leafletElement.openPopup(id);\r\n    }\r\n  }\r\n\r\n  handleSlider = (buttonId) => {\r\n    let incidents = this.props.incidents,\r\n      currentIndex = incidents.indexOf(this.state.currentIncident),\r\n      newIndex;\r\n\r\n    if (currentIndex === incidents.length - 1) {\r\n      buttonId === 'next' ?\r\n        newIndex = 0\r\n        : newIndex = currentIndex - 1;\r\n    } else if (currentIndex === eval(0)) {\r\n      buttonId === 'next' ?\r\n        newIndex = currentIndex + 1\r\n        : newIndex = incidents.length - 1;\r\n    } else {\r\n      buttonId === 'next' ?\r\n        newIndex = currentIndex + 1\r\n        : newIndex = currentIndex - 1;\r\n    }\r\n\r\n    this.setState({\r\n      currentIncident: incidents[newIndex],\r\n    });\r\n    this.markerRefs[incidents[newIndex].id].openPopup();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.props.incidents ?\r\n        <div>\r\n          <MapContainer\r\n            center={[this.state.lat, this.state.lng]}\r\n            zoom={this.state.zoom}\r\n            style={{ width: '100%', height: '900px' }}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {\r\n              this.props.incidents.map(incident => {\r\n                const point = [incident.point.coordinates[1],\r\n                incident.point.coordinates[0]];\r\n\r\n                return (\r\n                  <Marker eventHandlers={{\r\n                    click: () => this.handleMarker(incident.id),\r\n                  }}\r\n                    position={point}\r\n                    key={incident.incident_number}\r\n                    ref={ref => this.markerRefs[incident.id] = ref}\r\n                  >\r\n                    <Popup className=\"popup\">\r\n                      <div style={popupContent}>\r\n                        <div style={popupHead}>ADDRESS:</div>\r\n                        <span style={popupText}>\r\n                          {incident.address}, {incident.city}\r\n                        </span>\r\n                      </div>\r\n                    </Popup>\r\n                  </Marker>\r\n                )\r\n              })\r\n            }\r\n          </MapContainer>\r\n          {<div className=\"slider-buttons\">\r\n            <button\r\n              id='prev'\r\n              disabled={this.state.disabled}\r\n              onClick={(e) => this.handleSlider(e.target.id)}>\r\n            </button>\r\n            {\r\n              this.state.currentIncident ?\r\n                <div className=\"currentTag\">\r\n                  Current tag: {this.state.currentIncident.address}\r\n                </div>\r\n                : <div>No current tag</div>\r\n            }\r\n            <button\r\n              id='next'\r\n              disabled={this.state.disabled}\r\n              onClick={(e) => this.handleSlider(e.target.id)}>\r\n            </button>\r\n          </div>}\r\n        </div>\r\n        : 'Data is loading...'\r\n    )\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\nimport MapComponent from './components/MapComponent'\n\nimport './App.css';\n\nfunction App() {\n  const [incidents, setIncidents] = useState([]);\n  \n  useEffect(() => {\n    axios.get('https://data.sfgov.org/resource/wr8u-xric.json', {\n      params: {\n        \"$limit\": 100,\n        \"$$app_token\": 'lb1fieevDcRSzaeeamdVq9nrK'\n      }\n    })\n      .then((res) => {\n        setIncidents(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }, []);\n\n  return (\n    <div>\n      <MapComponent incidents={incidents} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}